security:
#    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
#    password_hashers:
#        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
#    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADVISER]
        ROLE_DEVELOPER: ROLE_ADMIN

    providers:
        api_key_provider:
            id: App\Security\ApiTokenUserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: api_key_provider
            custom_authenticator: App\Security\ApiTokenAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/api/v1, roles: ROLE_ADMIN }

when@test:
    security:
